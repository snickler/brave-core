diff --git a/chrome/browser/resources/settings/privacy_page/personalization_options.js b/chrome/browser/resources/settings/privacy_page/personalization_options.js
index 2076807ebbf585719c5e2d25bd20c227e2ced02b..cb1aba3918609b06c25753adb162b48256478b2a 100644
--- a/chrome/browser/resources/settings/privacy_page/personalization_options.js
+++ b/chrome/browser/resources/settings/privacy_page/personalization_options.js
@@ -34,7 +34,7 @@ Polymer({
     /** @type {settings.SyncStatus} */
     syncStatus: Object,
 
-    // <if expr="_google_chrome and not chromeos">
+    // <if expr="_chromium and not chromeos">
     // TODO(dbeam): make a virtual.* pref namespace and set/get this normally
     // (but handled differently in C++).
     /** @private {chrome.settingsPrivate.PrefObject} */
@@ -88,14 +88,14 @@ Polymer({
   ready() {
     this.browserProxy_ = settings.PrivacyPageBrowserProxyImpl.getInstance();
 
-    // <if expr="_google_chrome and not chromeos">
+    // <if expr="_chromium and not chromeos">
     const setMetricsReportingPref = this.setMetricsReportingPref_.bind(this);
     this.addWebUIListener('metrics-reporting-change', setMetricsReportingPref);
     this.browserProxy_.getMetricsReporting().then(setMetricsReportingPref);
     // </if>
   },
 
-  // <if expr="_google_chrome and not chromeos">
+  // <if expr="_chromium and not chromeos">
   /** @private */
   onMetricsReportingChange_() {
     const enabled = this.$.metricsReportingControl.checked;
@@ -145,6 +145,7 @@ Polymer({
   },
   // </if>
 
+  // <if expr="_google_chrome">
   /**
    * @return {boolean}
    * @private
@@ -193,6 +194,7 @@ Polymer({
     }
     this.showSignoutDialog_ = false;
   },
+  // </if>
 
   /**
    * @param {!Event} e
